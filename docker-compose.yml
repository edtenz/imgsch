version: '3.5'

services:
  etcd:
    container_name: imgsch-etcd
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    ports:
      - "2379:2379"
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: imgsch-minio
    image: minio/minio:RELEASE.2022-03-17T06-34-49Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    ports:
      - "9000:9000"
    command: minio server /minio_data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: "imgsch-mysql"
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=imgsch_db
      - MYSQL_ROOT_PASSWORD=helloworld123
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  standalone:
    container_name: imgsch-standalone
    image: milvusdb/milvus:v2.2.9
    command: [ "milvus", "run", "standalone" ]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  elasticsearch:
      container_name: imgsch-elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0-arm64
      ports:
        - "9200:9200"
        - "9300:9300"
      restart: always
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - ES_JAVA_OPTS=-Xms512m -Xmx1g
        # - ELASTIC_PASSWORD=admin123
        # - ENROLLMENT_TOKEN=07853bff7c7b982f11c7d08b234b991b
        # docker exec -it imgsch-elasticsearch /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/elasticsearch:/usr/share/elasticsearch/data

  kibana:
    container_name: imgsch-kibana
    image: docker.elastic.co/kibana/kibana:8.8.0-arm64
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # docker exec -it imgsch-kibana /usr/share/kibana/bin/kibana-verification-code
    restart: always
    depends_on:
      - elasticsearch
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/kibana:/usr/share/kibana/data

networks:
  default:
    name: imgsch
